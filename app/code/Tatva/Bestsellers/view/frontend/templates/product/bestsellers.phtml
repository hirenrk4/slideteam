
<?php $_productCollection = $this->getCatMostPopularProductCollection(0,10,1);
      $_helper = $this->helper('Magento\Catalog\Helper\Output');
?>
<?php
    if ($block->getMode() == 'grid') {
        $viewMode = 'grid';
        $image = 'category_page_grid';
        $showDescription = true;
        $templateType = \Magento\Catalog\Block\Product\ReviewRendererInterface::SHORT_VIEW;
    } else {
        $viewMode = 'list';
        $image = 'category_page_list';
        $showDescription = true;
        $templateType = \Magento\Catalog\Block\Product\ReviewRendererInterface::FULL_VIEW;
    }
    /**
     * Position for actions regarding image size changing in vde if needed
     */
    $pos = $block->getPositioned();
    

 $tag_page = $this->getRequest()->getRouteName() == "tag" ? true : false;
    ?>
<?php $backendModel = $_productCollection->getResource()->getAttribute('media_gallery')->getBackend();?>
<?php if($_productCollection->getSize()>0): ?>

    <?php // Grid mode ?>
    <?php $_columnCount = 5; ?>
    <div class="recommended-title-top">    
        <h4><?php echo __('Most Downloaded Products') ?></h4>
    </div>
<div class="catalog-category-view listing-container">
        <div class="products wrapper <?= /* @escapeNotVerified */ $viewMode ?> products-<?= /* @escapeNotVerified */ $viewMode ?>">
            <?php $iterator = 1; ?>
            <ol class="products list items product-items">
                <?php $i=0;$j=10; foreach($_productCollection as $_product): ?>
                <?= /* @escapeNotVerified */ ($iterator++ == 1) ? '<li class="item product product-item">' : '</li><li class="item product product-item">' ?>
                <div class="product-item-info" data-container="product-grid">
                <?php
                    $productImage = $block->getImage($_product, $image);
                    if ($pos != null) {
                        $position = ' style="left:' . $productImage->getWidth() . 'px;'
                        . 'top:' . $productImage->getHeight() . 'px;"';
                    }
                ?>
                <?php
                    $backendModel->afterLoad($_product);
                    $total_images = $_product->load($_product->getId())->getMediaGalleryImages();
                    $small_image_str = $this->helper('Magento\Catalog\Helper\Image')->init($_product, 'product_page_image_medium')->getUrl();

                    $count_total_images = count($total_images);
                    $remaining = count($total_images)-3;
                    if($remaining == -3)
                    {
                        $small_image_biggersize1 = $product->getImageUrl();
                    }else{
                        $id = 0;
                        $galary_images = array();
                        $image_url='';           
                        $is_hero_img_different = 0;
                        foreach($total_images as $val)
                        {
                            $galary_images[] = $this->helper('Magento\Catalog\Helper\Image')->init($_product,'category_page_grid')->setImageFile($val->getFile())->getUrl();
                            $id++;
                            if($id >5){break;}
                        }
                        $count = count($galary_images);
                        
                        $small_image_biggersize2="";
                        $small_image_biggersize3="";
                        $small_image_biggersize4="";
                        $small_image_biggersize5="";
                        $small_image_biggersize6="";

                        if($remaining > 3) {
                            $small_image_biggersize1 =  $galary_images[0];
                        }else {
                            $small_image_biggersize1 = $this->helper('Magento\Catalog\Helper\Image')->init($_product, 'product_page_image_medium')->setImageFile($total_images->getFirstItem()->getFile())->getUrl();
                        }

                        $hero_img_str = $galary_images[0];
                        $hero_img_name = substr($hero_img_str,(int)strrpos($hero_img_str,'/'));
                        $small_img_name = substr($small_image_str,(int)strrpos($small_image_str,'/')); 
                        
                        if($hero_img_name != $small_img_name){
                            $is_hero_img_different = 1;
                            if($remaining > 3) {
                                $small_image_biggersize1 = $this->helper('Magento\Catalog\Helper\Image')->init($_product, 'category_page_grid')->getUrl();
                            }else {
                                $small_image_biggersize1 = $this->helper('Magento\Catalog\Helper\Image')->init($_product, 'product_page_image_medium')->getUrl();
                            }
                            if($count > 1){
                                $small_image_biggersize2 = $galary_images[0];
                            }
                            if($count > 2){
                                $flag = strpos($galary_images[1], $small_img_name);
                                if($flag !== false){
                                    $small_image_biggersize3 =  $galary_images[2];    
                                }
                                else{
                                    $small_image_biggersize3 =  $galary_images[1];
                                }
                            }
                            if($count > 3){
                                $small_image_biggersize4 =  $galary_images[3];
                            }
                            if($count > 4){
                                $small_image_biggersize5 =  $galary_images[4];
                            }
                            if($count > 5){
                                $small_image_biggersize6 =  $galary_images[5];
                            }
                        }
                        else{
                            if($count > 1){
                                $small_image_biggersize2 = $galary_images[1];
                            }
                            if($count > 2){
                                $small_image_biggersize3 =  $galary_images[2];
                            }
                            if($count > 3){
                                $small_image_biggersize4 =  $galary_images[3];
                            }    
                            if($count > 4){
                                $small_image_biggersize5 =  $galary_images[4];
                            }
                            if($count > 5){
                                $small_image_biggersize6 =  $galary_images[5];
                            }
                        }
                                
                     }
                ?>
                <?php // Product Image ?>
                <a href="<?= /* @escapeNotVerified */ $_product->getProductUrl() ?>" class="product photo product-item-photo" tabindex="-1">
                    <?php $image_result = array('key'=>$j,'total_images'=>$count_total_images, 'remaining'=>$remaining, 'name'=>$_product->getName(),
                        'id'=>$_product->getId(),'product_url'=>$_product->getProductUrl(),'zoomsrc'=>$small_image_biggersize1,
                        'zoomsrc2'=>$small_image_biggersize2,'zoomsrc3'=>$small_image_biggersize3,
                            'zoomsrc4'=>$small_image_biggersize4,'zoomsrc5'=>$small_image_biggersize5,'zoomsrc6'=>$small_image_biggersize6);
                    ?>
                    <?= $productImage->setData('image_result',$image_result)->toHtml() ?>
                </a>
                <div class="product details product-item-details">
                    <?php
                        $_productNameStripped = $block->stripTags($_product->getName(), null, true);
                    ?>
                    <strong class="product name product-item-name" rel="imgtip[<?php echo $j;?>]">
                        <span class="name-content-trim"><a class="product-item-link" title="<?php echo $this->stripTags($_product->getName(), null, true) ?>"
                            href="<?= /* @escapeNotVerified */ $_product->getProductUrl() ?>">
                            <?= /* @escapeNotVerified */ $_helper->productAttribute($_product, $_product->getName(), 'name') ?>
                        </a></span>
                    </strong>
                    <?php if ($showDescription): ?>
                        <div class="product description product-item-description">
                            <p class="description-content-trim"><?= /* @escapeNotVerified */ $_helper->productAttribute($_product, $_product->getShortDescription(), 'short_description') ?></p>
                            <!-- <a onclick="location.href = '<?= /* @escapeNotVerified */ $_product->getProductUrl() ?>'"  title="<?= /* @escapeNotVerified */ $_productNameStripped ?>"
                                class="action more"><?= /* @escapeNotVerified */ __('View') ?>
                            </a> -->
                        </div>
                    <?php endif; ?>
                </div>
                </div>
                <?= ($iterator == count($_productCollection) + 1) ? '</li>' : '' ?>
                <?php $j++; ?>
                <?php endforeach; ?>
            </ol>
        </div>
    </div>
    <div>
        <a href="<?php echo $this->getUrl('bestsellers') ?>">
            <button class="btn btn-default get-button small-button" type="button">
                <?= /* @escapeNotVerified */ __('see all') ?>
            </button>
        </a>
    </div>
<?php endif; ?>
<script type="text/javascript" src="<?php echo $this->getViewFileUrl('Magento_Theme::js/ddimgtooltip.js'); ?>"></script>
<script type="text/javascript">
    require(['jquery','jQdotdot'], function ($)
    {
        $(document).ready(function(){
            //Product Detail shown
            $('.product-item-details').show();

            $('.name-content-trim').dotdotdot(
            {
                callback: function (isTruncated) {},
                ellipsis: "\u2026 ",
                height: 45,
                keep: null,
                tolerance: 0,
                truncate: "word",
                watch: "window",
            })

            $('.description-content-trim').dotdotdot(
            {
                callback: function (isTruncated) {},
                ellipsis: "\u2026 ",
                height: 120,
                keep: null,
                tolerance: 0,
                truncate: "word",
                watch: "window",
            })
        })
       
    })
</script>